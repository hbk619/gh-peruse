// Code generated by MockGen. DO NOT EDIT.
// Source: internal/os/clipboard.go

// Package mock_os is a generated GoMock package.
package mock_os

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockClippy is a mock of Clippy interface.
type MockClippy struct {
	ctrl     *gomock.Controller
	recorder *MockClippyMockRecorder
}

// MockClippyMockRecorder is the mock recorder for MockClippy.
type MockClippyMockRecorder struct {
	mock *MockClippy
}

// NewMockClippy creates a new mock instance.
func NewMockClippy(ctrl *gomock.Controller) *MockClippy {
	mock := &MockClippy{ctrl: ctrl}
	mock.recorder = &MockClippyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClippy) EXPECT() *MockClippyMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockClippy) Write(contents string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", contents)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockClippyMockRecorder) Write(contents interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockClippy)(nil).Write), contents)
}
