// Code generated by MockGen. DO NOT EDIT.
// Source: internal/github/api.go

// Package mock_github is a generated GoMock package.
package mock_github

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockApi is a mock of Api interface.
type MockApi struct {
	ctrl     *gomock.Controller
	recorder *MockApiMockRecorder
}

// MockApiMockRecorder is the mock recorder for MockApi.
type MockApiMockRecorder struct {
	mock *MockApi
}

// NewMockApi creates a new mock instance.
func NewMockApi(ctrl *gomock.Controller) *MockApi {
	mock := &MockApi{ctrl: ctrl}
	mock.recorder = &MockApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApi) EXPECT() *MockApiMockRecorder {
	return m.recorder
}

// LoadGitHubAPIJSON mocks base method.
func (m *MockApi) LoadGitHubAPIJSON(command string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadGitHubAPIJSON", command)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadGitHubAPIJSON indicates an expected call of LoadGitHubAPIJSON.
func (mr *MockApiMockRecorder) LoadGitHubAPIJSON(command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadGitHubAPIJSON", reflect.TypeOf((*MockApi)(nil).LoadGitHubAPIJSON), command)
}
